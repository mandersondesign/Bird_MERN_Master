defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.15

version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.1.0
  aws-cli: circleci/aws-cli@0.1.4
jobs:
  checkout_code:
    <<: *defaults
    steps:
#      - restore_cache:
#          keys:
#            - source-{{ .Branch }}-{{ .Revision }}
#            - source-{{ .Branch }}-
#            - source-

      - checkout

      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/repo"
  install:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: "Npm install"
          command: npm install --no-save
      - save_cache:
          key: v1-dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  lint:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: "Lint"
          command: npm run lint
      - run:
          name: "Build"
          command: npm run build
  docker-build-prod:
    <<: *defaults
    environment:
      - AWS_ACCOUNT_ID: "653628130703"
      - AWS_DEFAULT_REGION: us-east-1
      - AWS_RESOURCE_NAME_PREFIX: prod
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "package-lock.json" }}
      - setup_remote_docker
      - run:
          name: Setup common environment variables
          command: |
            echo 'export FULL_IMAGE_NAME_LATEST="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:latest"' >> $BASH_ENV
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME_LATEST -f docker/prod/Dockerfile .
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $FULL_IMAGE_NAME_LATEST
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
  push-image:
    docker:
      - image: circleci/python:3.6.1
    environment:
      - AWS_DEFAULT_OUTPUT: json
      - AWS_ACCOUNT_ID: "653628130703"
      - AWS_DEFAULT_REGION: us-east-1
      - AWS_RESOURCE_NAME_PREFIX: prod
    steps:
      #        - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: "$AWS_ACCESS_KEY_ID"
          aws-region: "$AWS_DEFAULT_REGION"
      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar
      - run:
          name: Setup common environment variables
          command: |
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_TAG}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME_LATEST="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:latest"' >> $BASH_ENV
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker tag $FULL_IMAGE_NAME_LATEST $FULL_IMAGE_NAME
            docker push $FULL_IMAGE_NAME
            docker push $FULL_IMAGE_NAME_LATEST
  deploy:
    <<: *defaults
    steps:
      - run:
          name: Deploy Over SSH
          command: |
             ssh -o "StrictHostKeyChecking=no" ubuntu@3.234.64.62 "cd ~/api && git checkout -- package-lock.json && git pull && docker-compose exec -T api npm run migrate:up && docker-compose restart api"

workflows:
  version: 2

  build_and_deploy_dev:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      # - lint:
      #    requires:
      #      - install
      - deploy:
         requires:
           - install

  build_and_deploy_prod:
    jobs:
      - checkout_code:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /^prod.*/
      - install:
          requires:
            - checkout_code
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /^prod.*/
      # - lint:
      #    requires:
      #      - install
      #    filters:
      #      # ignore any commit on any branch by default
      #      branches:
      #        ignore: /.*/
      #      # only act on version tags
      #      tags:
      #        only: /^prod.*/
      - docker-build-prod:
         requires:
           - install
         filters:
           # ignore any commit on any branch by default
           branches:
             ignore: /.*/
           # only act on version tags
           tags:
             only: /^prod.*/
      - push-image:
         requires:
           - docker-build-prod
         filters:
           # ignore any commit on any branch by default
           branches:
             ignore: /.*/
           # only act on version tags
           tags:
             only: /^prod.*/
